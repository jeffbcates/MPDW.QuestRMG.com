@model Quest.MPDW.Models.BaseUserSessionViewModel
<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="utf-8" />
        <title>Quest Resource Management Group - MPDW</title>
        <link href="~/favicon.png?v=1" rel="shortcut icon" type="image/x-icon" />
        <meta name="viewport" content="width=device-width" />
        <link href="~/Content/bootstrap-3.3.5-dist/css/bootstrap.min.css" rel="stylesheet" />
        <link href="~/Content/font-awesome-4.7.0/css/font-awesome.min.css" rel="stylesheet" />
        <link href="~/Content/animate.min.css" rel="stylesheet" />
        <link href="~/Content/creative.css" rel="stylesheet"/>
        <link href="~/Content/responsive.css" rel="stylesheet"/>
        <link href="~/Content/themes/jquery-ui/jquery-ui-1.9.2.css" rel="stylesheet"/>
        <link href="~/Content/bootstrap-treeview/bootstrap-treeview.css" rel="stylesheet"/>
        <link href="~/Content/themes/metronic/layout.min.css" rel="stylesheet"/>
        <link href="~/Content/themes/metronic/components.min.css" rel="stylesheet"/>
        <link href="~/Content/scrollToTop.css" rel="stylesheet"/>
        <link href="~/Content/Quest/quest.css" rel="stylesheet"/>
        <link href="~/Content/Site.css" rel="stylesheet"/>

        <script src="~/Scripts/socket.io-1.4.5.BEAUTIFY.js" type="text/javascript"></script>
        <script src="~/Scripts/jquery-1.11.3.js" type="text/javascript"></script>
        <script src="~/Content/bootstrap-3.3.5-dist/js/bootstrap.min.js" type="text/javascript"></script>
        <script src="~/Scripts/bootstrap-datepicker/js/bootstrap-datepicker.js" type="text/javascript"></script>
        <script src="~/Scripts/jquery.easing.min.js" type="text/javascript"></script>
        <script src="~/Scripts/jquery.fittext.js" type="text/javascript"></script>
        <script src="~/Scripts/wow.min.js" type="text/javascript"></script>
        <script src="~/Scripts/creative.js" type="text/javascript"></script>
        <script src="~/Scripts/Quest/qrmg.js" type="text/javascript"></script>
        <script src="~/Scripts/Quest/qrmgmvc.js" type="text/javascript"></script>
        <script src="~/Scripts/Quest/qrmgctx.js" type="text/javascript"></script>
        <script src="~/Scripts/Quest/qrmgTreeview.js" type="text/javascript"></script>
        <script src="~/Scripts/Quest/qrmgMainMenu.js" type="text/javascript"></script>
        <script src="~/Scripts/Quest/qrmgNavbar.js" type="text/javascript"></script>
        <script src="~/Scripts/Quest/qrmgTable.js" type="text/javascript"></script>
        <script src="~/Scripts/Quest/qrmgGrid.js" type="text/javascript"></script>
        <script src="~/Scripts/Quest/qrmgumsg.js" type="text/javascript"></script>
        <script src="~/Scripts/Quest/qrmgEditor.js" type="text/javascript"></script>
        <script src="~/Scripts/Quest/qrmgPortlet.js" type="text/javascript"></script>
        <script src="~/Scripts/Quest/qrmgPanel.js" type="text/javascript"></script>
        <script src="~/Scripts/Quest/qrmgForm.js" type="text/javascript"></script>
        <script src="~/Scripts/Quest/qrmgFilter.js" type="text/javascript"></script>
        <script src="~/Scripts/Quest/qrmgio.js" type="text/javascript"></script>
        <script src="~/Scripts/Quest/qrmgobj.js" type="text/javascript"></script>
        <script src="~/Scripts/tsorter-2.0.0.js" type="text/javascript"></script>
        <script src="~/Scripts/jquery.ui/jquery-ui-1.9.2.js" type="text/javascript"></script>
        <script src="~/Scripts/bootstrap-treeview/bootstrap-treeview.js" type="text/javascript"></script>
        <script src="~/Scripts/jQueryMaskedInput/jquery.maskedinput.js" type="text/javascript"></script>
    </head>
<body>
    <nav class="navbar navbar-default navbar-fixed-top affix-top" id="mainNav">
        <div id="cobanner" class="navbar-header">
            <a href="" class="navbar-brand page-scroll">
                <div class="logo">
                    <span class="coicon">
                        <img src="~/Content/Images/qrmg-logo.png" alt="Quest RMG"  height="30" width="30" />
                    </span>
                </div>
                <span class="coname">Quest RMG</span>
            </a>
        </div>

        <!-- Main menu -->
        <div id="mainMenuFrame" class="collapse navbar-collapse">
            <button id="btnMainMenu" data-target="#mainMenu" data-toggle="collapse" class="navbar-toggle collapsed" type="button">
                <span class="sr-only">Toggle navigation</span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
            </button>

            @if (Model == null)
            {
                @Html.Partial("_MainMenu", null);
            }
            else
            {
                Model.MainMenu.Options[1].bCurrentItem = true;
                @Html.Partial("_MainMenu", Model.MainMenu);
            }
        </div>

        <div class="appTitle">MPDW</div>
    </nav>
    <div id="content">
        <div id="_questctx">
            <input type="hidden" id="_ctx" value="@Model.UserSession.Id" />
            <input type="hidden" id="_avSeverity" value="@Model.questStatus.Severity" />
            <input type="hidden" id="_avMessage" value="@Model.questStatus.Message" />
        </div>
        <div id="_questmm">
            <input type="hidden" id="_mmI" value="@Model._mmI" />
        </div>
        <div id="_questnb">
            <input type="hidden" id="_nbI" value="@Model._nbI" />
            <input type="hidden" id="_nbX" value="@Model._nbX" />
        </div>
        <div id="pageContent">
            <div id="navbarMainMenu"></div>
            <div id="pageContentFrame">
                <div class="umsg" id="__umsg">&nbsp;</div><div class="umsgX fa fa-window-close-o fa-2x" title="Clear user message"></div>
                <div class="usermarquis" id="usermarquis">@Model.UserSession.User.LastName, @Model.UserSession.User.FirstName</div>
                @RenderBody()
            </div>
        </div>
        <a href="#top" id="toTop" style="display: inline;">
            <span class="glyphicon glyphicon-circle-arrow-up"></span>
        </a>    
    </div>
    <footer>
        <div class="content-wrapper">
            <div class="text-center">
                <div class="copyright">&copy; 2017  Quest Resource Management Group.   All rights reserved.    v.20170404001</div>
            </div>
        </div>
    </footer>
</body>
</html>

<script type="text/javascript">
    $(function () {
        $('.no-fouc').removeClass('no-fouc');
        $(window).scroll(function () {
            if ($(this).scrollTop() > 100) {
                $('.scrollToTop').fadeIn();
            } else {
                $('.scrollToTop').fadeOut();
            }
        });
        $("#toTop").click(function () {
            $('html, body').animate({ scrollTop: 0 }, 500);
            return false;
        });
    });
</script>
<script type="text/javascript">
    var __umsg = null;
    var _umsg = {
        element: '__umsg',
        prefix: '',
        uri: '/Forms/Errors',
        callback: _cbUserMessages
    }
    function _cbUserMessages() {
    }
    $(function () {
        __umsg = new qrmgumsg(_umsg);
    });
</script>
<script type="text/javascript">
    var _ctx = null;
    $(function () {
        var ctx = { element: '_questctx' };
        _ctx = new qrmgctx(ctx);
        initNavbar();
        initcobanner();
    });
</script>
<script type="text/javascript">
    var _navbarMainMenu;
    function initNavbar() {
        var navbarMainMenu = {
            element: 'navbarMainMenu',
            prefix: 'navbar',
            uri: '/',
            side: 'left',
            maskFrame: '#pageContentFrame',
            ctx: {
                element: '_questnb',
                objects: [_ctx]
            },
            expanded: $('input[Id="_nbX"]').val() == 'true',
            options: [
                {
                    name: 'Filters', label: 'Filters',
                    autoscroll: {
                        element: '#pnlFilters',
                        offset: 118,
                        delay: 750
                    }
                },
                {
                    name: 'Results', label: 'Results',
                    autoscroll: {
                        element: '#pnlResults',
                        offset: 118,
                        delay: 750
                    }
                },
                {
                    name: 'BulkInserts', label: 'Bulk Inserts',
                    autoscroll: {
                        element: '#pnlBulkInserts',
                        offset: 118,
                        delay: 750
                    }
                },
                {
                    name: 'BulkUpdates', label: 'Bulk Updates',
                    autoscroll: {
                        element: '#pnlBulkUpdates',
                        offset: 118,
                        delay: 750
                    }
                },
                {
                    name: 'DataMgr', label: 'Tablesets',
                    uri: '/DataMgr',
                    autoExpand: true,
                    options: [],
                    dynamicOptions: { uri: '/DataMgr/Tablesets/List', method: 'get', click: '/DataMgr/Tableset' }
                },
            ]
        }
        _navbarMainMenu = new qrmgNavbar(navbarMainMenu);
    }
</script>
<script type="text/javascript">
    $(window).resize(function () {
        if ($('button[id="btnMainMenu"]').is(':visible')) {
            if ($('ul[id="mainMenu"').hasClass('in')) {
                $('ul[id="mainMenu"').attr('aria-expanded', 'true');
            }
            else {
                $('ul[id="mainMenu"').addClass('collapse').attr('aria-expanded', 'false');
            }
        }
        else {
            $('ul[id="mainMenu"').removeClass('collapse').attr('aria-expanded', 'true');
        }
    });
    $(function () {
        $(".nav").find("li a").on('click', function () {
            $('.navbar-collapse.in').collapse('hide');
        });
        });
</script>
<script type="text/javascript">
    function initcobanner() {
        $('#cobanner').click(function(e) {
            e.stopPropagation();
            e.preventDefault();
            var d = {};
            d = _ctx.Context();
            var n = _navbarMainMenu._getctx();
            $.extend(d, n);
            var _io = new qrmgio(rcobanner);
            _io.ShowView('/', d);
        });
    }
    function rcobanner() {}
</script>

<div class="modal fade" id="mdlgConfirmDelete" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title" id="myModalLabel">Confirm Delete</h4>
            </div>
            <div class="modal-body">
                <p>You are about to delete this item.</p>
                <p>Do you want to proceed?</p>
            </div>

            <div class="modal-footer">
                <button id="btnCancel" type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
                <button id="btnConfirm" type="button" class="btn btn-danger" data-dismiss="modal">Delete</button>
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="mdlgLoseChanges" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title" id="myModalLabel">Discard Changes</h4>
            </div>

            <div class="modal-body">
                <p>You have made changes to this item.</p>
                <p>Do you want to discard these changes?</p>
            </div>

            <div class="modal-footer">
                <button id="btnCancel" type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
                <button id="btnDiscard" type="button" class="btn btn-warning" data-dismiss="modal">Discard</button>
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="mdlgDelChanges" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title" id="myModalLabel">Item Changed</h4>
            </div>

            <div class="modal-body">
                <p>You have made changes to this item.</p>
                <p>You can cancel and save, or refresh then delete.</p>
            </div>

            <div class="modal-footer">
                <button id="btnCancel" type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
                <button id="btnRefresh" type="button" class="btn btn-warning" data-dismiss="modal">Refresh</button>
            </div>
        </div>
    </div>
</div>

<!-- Join modal -->
<div id="mdlJoin" class="modal fade" role="dialog">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Join Column</h4>
            </div>
            <div class="modal-body">
                <div>
                    <div id="joinInfo" class="panel-half-tab  pull-left" style="height:400px;">
                        <div id="joinColumn" class="bold"></div>
                        <div id="joinTargets"></div>
                        <div id="joinType" style="margin-top: 20px;">
                            <select id="selJoinType">
                                <option value="INNER JOIN">INNER JOIN</option>
                                <option value="LEFT JOIN">LEFT JOIN</option>
                                <option value="RIGHT JOIN">RIGHT JOIN</option>
                                <option value="FULL JOIN">FULL JOIN</option>
                            </select>
                        </div>
                    </div>
                    <div class="panel-half-tab pull-right" style="height:400px; overflow: auto;">
                        <div id="tvwJoinTargets"></div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button id="btnJoin" type="button" class="btn btn-danger" data-dismiss="modal">Join</button>
                <button id="btnUnjoin" type="button" class="btn btn-primary" data-dismiss="modal">Un-Join</button>
                <button id="btnCancel" type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>
<script type="text/javascript">
    $('#mdlJoin').on('show.bs.modal', function (e) {
        initJoinModal(e);
    });
    var _joinId;
    var _fi;
    function initJoinModal(e) {
        _joinId = $(e.relatedTarget).closest('.questFilterItem').attr('data-id');
        var fi = $(e.relatedTarget).closest('.questFilterItem');
        var t = $(fi).find('.questFilterColumnEntity').text();
        var c = $(fi).find('.questFilterColumn').text();
        var d = $('#joinColumn', '#mdlJoin').text(t + '.' + c);
        $(d).text(t + '.' + c);

        var jj = $('.questFilterJoinFrame', fi).find('.questFilterItemJoin');
        var _h = [], _i = 0;
        $.each(jj, function (i, j) {
            _h[_i++] = '<div class="joinItem" data-id="' + $(j).attr('data-id') + '"><input type="checkbox" class="select-join"/>' + $(j).text() + '</div>';
        });
        $('#joinTargets', '#mdlJoin').empty().append(_h.join(''));

        $('.questTableInlineHeaderInfo', '#mdlJoin').remove();
        initTreeviewJoinTargets();
        bindJoinModal();
        _fi = e;
    }
    function bindJoinModal() {
        setJoinModalContext();
        $('button', '#mdlJoin').unbind('click').on('click', function (e) {
            var id = $(e.currentTarget).attr('id').substr(3);
            if (id == 'Join') {
                var sn = $('.node-selected', '#tvwJoinTargets');
                if (!sn.length) {
                    e.stopPropagation();
                    e.preventDefault();
                    return;
                }
                var tn = _tvwJoinTargets.GetNode($(sn).attr('data-id'));
                var tbl = _tvwValueEntities.GetNode(tn.ParentId);
                var col = tn.text.split(':')[0];
                var j = {};
                j.Id = 0;
                j.ColumnId = tn.Id;
                j.JoinType = $('#selJoinType option:selected').val();
                j.Identifier = tbl.text + '.[' + col.trim() + ']';
                _fltFilterItems.AddJoin(_joinId, j);

                var _h = [], _i = 0;
                _h[_i++] = '<div class="joinItem" data-id="' + j.ColumnId + '"><input type="checkbox" class="select-join"/>' + j.Identifier + '</div>';
                $('#joinTargets', '#mdlJoin').append(_h.join(''));
            }
            else if (id == 'Unjoin') {
                var jj = $('.joinItem', '#mdlJoin').find('input[type="checkbox"]:checked');
                $.each(jj, function (i, j) {
                    var _id = $(j).parent().attr('data-id');
                    if (_fltFilterItems.RemoveJoin(_joinId, { ColumnId: _id, JoinText: $(j).parent().text() })) {
                        $(j).parent().remove();
                    }
                });
                $('.joinItem', '#mdlJoin').find('input[type="checkbox"]:checked').length ? $('#btnUnjoin', '#mdlJoin').removeProp('disabled') : $('#btnUnjoin', '#mdlJoin').prop('disabled', 'disabled');
            }
            else if (id == 'Cancel') { return; }
            e.stopPropagation();
            e.preventDefault();
            return;
        });
        $('.select-join', '#mdlJoin').unbind('click').on('click', function (e) {
            $('.joinItem', '#mdlJoin').find('input[type="checkbox"]:checked').length ? $('#btnUnjoin', '#mdlJoin').removeProp('disabled') : $('#btnUnjoin', '#mdlJoin').prop('disabled', 'disabled');
        });
    }
    function setJoinModalContext(bJ,bU) {
        (bJ != undefined) ? $('#btnJoin', '#mdlJoin').removeProp('disabled') : $('#btnJoin', '#mdlJoin').prop('disabled', 'disabled');
        $('.joinItem', '#mdlJoin').find('input[type="checkbox"]:checked').length ? $('#btnUnjoin', '#mdlJoin').removeProp('disabled') : $('#btnUnjoin', '#mdlJoin').prop('disabled', 'disabled');
    }
</script>
<script type="text/javascript">
    var _tvwJoinTargets = null;
    function initTreeviewJoinTargets() {
        var tvwJoinTargets = {
            element: 'tvwJoinTargets',
            pfx: 'jointt',
            uri: '/DataMgr/JoinTarget',
            keyname: 'FilterId',
            header: {
                bInlineHeader: true,
                count: false,
                label: 'Filter Tables: ',
                filter: true
            },
            draggable: false,
            droppable: false,
            sortable: false,
            multiSelect: false,
            ctx: {
                elements: ['_questctx', '_questmm', '_questnb'],
            },
            viewstate: { element: '__frmDataMgrTablesetVIEW_STATE' },
            callback: cbTvwJoinTargets,
            events: [
                { name: 'NodeSelected', callback: cbTvwJoinTargetsOnNodeSelected },
            ],
            operations: [
                { name: 'Add', label: 'Add', classes: "btn btn-primary" },
            ],
        }
        $('#mdlJoin .questTreeviewCommands').remove();
        $('#tvwJoinTargets').empty();
        _tvwJoinTargets = new qrmgTreeview(tvwJoinTargets);
        loadTreeviewJoinTargets();
    }
    function loadTreeviewJoinTargets(tt) {
        var _d = { questStatus: _viewstate.questStatus, Items: tt ? tt : _viewstate.Entities };
        _tvwJoinTargets.Fill(_d);
    }
    function cbTvwJoinTargets(op, msg, n, d) {
    }
    function cbTvwJoinTargetsOnNodeSelected(d, e) {
        setJoinModalContext($('.node-selected', '#tvwJoinTargets').length);
    }
</script>


<!-- Lookup modal -->
<div id="mdlLookup" class="modal fade" role="dialog">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Choose a Lookup</h4>
            </div>
            <div class="modal-body">
                <div>
                    <div class="" style="height:40px; overflow: auto;">
                        <div class="lookupColumnInfo"></div>
                    </div>
                    <div class="" style="height:400px; overflow: auto;">
                        <div id="tvwLookups"></div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button id="btnSelect" type="button" class="btn btn-danger" data-dismiss="modal">Select</button>
                <button id="btnRemove" type="button" class="btn btn-primary" data-dismiss="modal">Remove</button>
                <button id="btnCancel" type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>
<script type="text/javascript">
    $('#mdlLookup').on('show.bs.modal', function (e) {
        initLookupModal(e);
    });
    var _fi;
    var _lookupId;
    var _li;
    function initLookupModal(e) {
        _fi = $(e.relatedTarget).closest('.questFilterItem');
        _lookupId = $(_fi).attr('data-id');
        var tbl = $(_fi).find('.questFilterItemSpecifier .questFilterColumnEntity').text();
        var c = $(_fi).find('.questFilterItemSpecifier .questFilterColumn').text();
        var d = $('.lookupColumnInfo', '#mdlLookup');
        $(d).text(tbl + '.' + c);

        $('.questTableInlineHeaderInfo', '#mdlLookup').remove();
        initTreeviewLookups();
        bindLookupModal();
        _li = e;
    }
    function bindLookupModal() {
        setLookupModalContext();
        $('button', '#mdlLookup').unbind('click').on('click', function (e) {
            var id = $(e.currentTarget).attr('id').substr(3);
            if (id == 'Select') {
                var sn = $('.node-selected', '#tvwLookups');
                if (!sn.length) {
                    e.stopPropagation();
                    e.preventDefault();
                    return;
                }
                var tn = _tvwLookups.GetNode($(sn).attr('data-id'));
                _fltFilterItems.AddData(_lookupId, 'Lookup', tn);

                // klugie: display lookup prior to SAVE/refresh
                $(_li.relatedTarget).closest('.questFilterItem').find('.questFilterItemSpecifier').find('.questFilterItemLookup').text("Lookup: " + tn.text);
            }
            else if (id == 'Remove') {
                $(_li.relatedTarget).closest('.questFilterItem').find('.questFilterItemSpecifier').find('.questFilterItemLookup').empty();
                _fltFilterItems.AddData(_lookupId, 'Lookup', undefined);
            }
        });
    }
    function setLookupModalContext(bJ,bU) {
        (bJ != undefined) ? $('#btnSelect', '#mdlLookup').removeProp('disabled') : $('#btnSelect', '#mdlLookup').prop('disabled', 'disabled');
        $(_fi).find('.questFilterItemSpecifier').find('.questFilterItemLookup').text().trim().length ? $('#btnRemove', '#mdlLookup').removeProp('disabled') : $('#btnRemove', '#mdlLookup').prop('disabled', 'disabled');
    }
</script>
<script type="text/javascript">
    var _tvwLookups = null;
    function initTreeviewLookups() {
        var tvwLookups = {
            element: 'tvwLookups',
            pfx: 'lookuptt',
            uri: '/DataMgr/Lookups',
            keyname: 'FilterId',
            header: {
                bInlineHeader: true,
                count: false,
                label: 'Filter Lookups: ',
                filter: true
            },
            draggable: false,
            droppable: false,
            sortable: false,
            multiSelect: false,
            ctx: {
                elements: ['_questctx', '_questmm', '_questnb'],
            },
            viewstate: { element: '__frmDataMgrTablesetVIEW_STATE' },
            callback: cbTvwLookupTargets,
            events: [
                { name: 'NodeSelected', callback: cbTvwLookupTargetsOnNodeSelected },
            ],
            operations: [
                { name: 'Add', label: 'Add', classes: "btn btn-primary" },
            ],
        }
        _tvwLookups = new qrmgTreeview(tvwLookups);
        loadTreeviewLookupTargets();
    }
    function loadTreeviewLookupTargets(tt) {
        var _d = { questStatus: _viewstate.questStatus, Items: tt ? tt : _viewstate.Lookups };
        _tvwLookups.Fill(_d);
    }
    function cbTvwLookupTargets(op, msg, n, d) {
    }
    function cbTvwLookupTargetsOnNodeSelected(d, e) {
        setLookupModalContext($('.node-selected', '#tvwLookups').length);
    }
</script>

<!-- TypeList modal -->
<div id="mdlTypeList" class="modal fade" role="dialog">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Choose a TypeList</h4>
            </div>
            <div class="modal-body">
                <div>
                    <div class="" style="height:40px; overflow: auto;">
                        <div class="typeListColumnInfo"></div>
                    </div>
                    <div class="" style="height:400px; overflow: auto;">
                        <div id="tvwTypeLists"></div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button id="btnSelect" type="button" class="btn btn-danger" data-dismiss="modal">Select</button>
                <button id="btnRemove" type="button" class="btn btn-primary" data-dismiss="modal">Remove</button>
                <button id="btnCancel" type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>
<script type="text/javascript">
    $('#mdlTypeList').on('show.bs.modal', function (e) {
        initTypeListModal(e);
    });
    var _fi;
    var _typeListId;
    var _li;
    function initTypeListModal(e) {
        _fi = $(e.relatedTarget).closest('.questFilterItem');
        _typeListId = $(_fi).attr('data-id');
        var tbl = $(_fi).find('.questFilterItemSpecifier .questFilterColumnEntity').text();
        var c = $(_fi).find('.questFilterItemSpecifier .questFilterColumn').text();
        var d = $('.typeListColumnInfo', '#mdlTypeList');
        $(d).text(tbl + '.' + c);

        $('.questTableInlineHeaderInfo', '#mdlTypeList').remove();
        initTreeviewTypeLists();
        bindTypeListModal();
        _li = e;
    }
    function bindTypeListModal() {
        setTypeListModalContext();
        $('button', '#mdlTypeList').unbind('click').on('click', function (e) {
            var id = $(e.currentTarget).attr('id').substr(3);
            if (id == 'Select') {
                var sn = $('.node-selected', '#tvwTypeLists');
                if (!sn.length) {
                    e.stopPropagation();
                    e.preventDefault();
                    return;
                }
                var tn = _tvwTypeLists.GetNode($(sn).attr('data-id'));
                _fltFilterItems.AddData(_typeListId, 'TypeList', tn);

                // klugie: display typeList prior to SAVE/refresh
                $(_li.relatedTarget).closest('.questFilterItem').find('.questFilterItemSpecifier').find('.questFilterItemTypeList').text("TypeList: " + tn.text);
            }
            else if (id == 'Remove') {
                $(_li.relatedTarget).closest('.questFilterItem').find('.questFilterItemSpecifier').find('.questFilterItemTypeList').empty();
                _fltFilterItems.AddData(_typeListId, 'TypeList', undefined);
            }
        });
    }
    function setTypeListModalContext(bJ,bU) {
        (bJ != undefined) ? $('#btnSelect', '#mdlTypeList').removeProp('disabled') : $('#btnSelect', '#mdlTypeList').prop('disabled', 'disabled');
        $(_fi).find('.questFilterItemSpecifier').find('.questFilterItemTypeList').text().trim().length ? $('#btnRemove', '#mdlTypeList').removeProp('disabled') : $('#btnRemove', '#mdlTypeList').prop('disabled', 'disabled');
    }
</script>
<script type="text/javascript">
    var _tvwTypeLists = null;
    function initTreeviewTypeLists() {
        var tvwTypeLists = {
            element: 'tvwTypeLists',
            pfx: 'typeListtt',
            uri: '/DataMgr/TypeLists',
            keyname: 'FilterId',
            header: {
                bInlineHeader: true,
                count: false,
                label: 'Filter TypeLists: ',
                filter: true
            },
            draggable: false,
            droppable: false,
            sortable: false,
            multiSelect: false,
            ctx: {
                elements: ['_questctx', '_questmm', '_questnb'],
            },
            viewstate: { element: '__frmDataMgrTablesetVIEW_STATE' },
            callback: cbTvwTypeListTargets,
            events: [
                { name: 'NodeSelected', callback: cbTvwTypeListTargetsOnNodeSelected },
            ],
            operations: [
                { name: 'Add', label: 'Add', classes: "btn btn-primary" },
            ],
        }
        _tvwTypeLists = new qrmgTreeview(tvwTypeLists);
        loadTreeviewTypeListTargets();
    }
    function loadTreeviewTypeListTargets(tt) {
        var _d = { questStatus: _viewstate.questStatus, Items: tt ? tt : _viewstate.TypeLists };
        _tvwTypeLists.Fill(_d);
    }
    function cbTvwTypeListTargets(op, msg, n, d) {
    }
    function cbTvwTypeListTargetsOnNodeSelected(d, e) {
        setTypeListModalContext($('.node-selected', '#tvwTypeLists').length);
    }
</script>


























<!-- Extend modal -->
<div class="modal fade" id="mdlExtendFilter" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title" id="myModalLabel">Extend Filter</h4>
            </div>

            <div class="modal-body">
                <p>Extending a filter means to copy the original filter you selected, plus the new operations you have specified, and make a new filter by a new name.</p>
                <b>New Filter Name:</b>
                <input type="text" class="panel-control" id="txtExtendFiltername" style="width:100%">
            </div>
            <div class="modal-footer">
                <button id="btnExtendCancel" type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
                <button id="btnExtendSave" type="button" class="btn btn-danger" data-dismiss="modal">Save</button>
            </div>
        </div>
    </div>
</div>

















<script type="text/javascript">
    $(function () {
        $('.umsgX').on('click', function (e) {
            ClearUserMessage();
        });
    });
</script>
