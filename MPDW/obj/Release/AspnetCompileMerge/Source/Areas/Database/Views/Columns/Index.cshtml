@model Quest.MasterPricing.Database.Models.ColumnListViewModel
@{
    ViewBag.Title = "Column List";
    Layout = "~/Views/Shared/_LayoutDatabase.cshtml";
}

<input type="hidden" id="__tblColumnsVIEW_STATE" value="@Html.Raw(Json.Encode(Model))" />

<div class="questTableTitle">Column List</div>
<div class="page-subtitle-frame">
    <div id="pDatabaseName" class="page-subtitle pull-left"><b>Name:</b></div>
    <div id="pTablesetLastRefresh" class="page-subtitle pull-right"><b>Last Refresh:</b></div>
    <br/>
    <div id="pEntityName" class="page-subtitle pull-left"></div>
</div>

<div id="tblColumns" class="qrmgTable"></div>

<script type="text/javascript">
    var _viewstate;
    var _tblColumns;
    $(function () {
        initViewstate();
        var tblColumns = {
            name: 'tblColumns',
            element: 'tblColumns',
            prefix: 'tt',
            uri: '/Database/Columns',
            ctx: {
                elements: ['_questctx', '_questmm', '_questnb'],
                master: { viewstate: true, field: 'DatabaseId' },
            },
            autoLoad: false,
            callback: cbTblTables,
            columns: [
                { name: 'Id', hidden: true, key: true },
                { name: 'Name', label: 'Column Name' },
                { name: 'DataTypeName', label: 'Data Type' },
                { name: 'bAllowDbNull', label: 'Nullable', width: '100px', align: 'center' },
                { name: 'bIsIdentity', label: 'Identity', width: '100px', align: 'center' },
                { name: 'bIsAutoIncrement', label: 'Autoinc.', width: '100px', align: 'center' },
                { name: 'bIsKey', label: 'Key', width: '100px', align: 'center' },
            ],
            paging: {
                Top: true,
                Bottom: true,
                PageSize: 100,
                PageSizeOptions: [100, 200, 300, 1000],
            },
            bNoDefaultOptions: true,
            operations: [
                { name: 'Database', label: 'Database', uri: '/Setup/Database', args: [{ viewstate: true, field: 'DatabaseId', name: 'Id' }] },
                { name: 'Tables', label: 'Tables', uri: '/Database/Tables', args: [{ viewstate: true, field: 'DatabaseId', name: 'Id' }] },
                { name: 'Views', label: 'Views', uri: '/Database/Views', args: [{ viewstate: true, field: 'DatabaseId', name: 'Id' }] },
                { name: 'StoredProcedures', label: 'Stored Procedures', uri: '/Database/StoredProcedures', args: [{ viewstate: true, field: 'DatabaseId', name: 'Id' }] },
            ],
            commands: [
            ],
            events: [
            ],
            contextMenu: [
            ]
        }
        _tblColumns = new qrmgTable(tblColumns);
        _tblColumns.Load(_viewstate);
    });
    function cbTblTables(ud, d) {

    }
    function cbTablesDoubleClick(ud, d) {
        $.extend(d, _tblColumns._getctx());
        d.ParentEntityType = 'table';
        d.DatabaseId = _viewstate.DatabaseId;
        var _io = new qrmgio(cbShowColumnView);
        _io.ShowView('/Database/Columns', d);
    }
    function cbShowColumnView(ud, d) {

    }
    function initViewstate() {
        _viewstate = JSON.parse($('#__tblColumnsVIEW_STATE').val());
        $('#pDatabaseName').html('<b>Name:</b>&nbsp;' + _viewstate.Database.Name);
        $('#pTablesetLastRefresh').html('<b>Last Refresh:</b>&nbsp;' + _viewstate.Database.LastRefresh);
        if (_viewstate.ParentEntityType == 'table') {
            $('#pEntityName').html('<b>Table:</b>&nbsp;' + _viewstate.Table.Name);
        }
        else if (_viewstate.ParentEntityType == 'view') {
            $('#pEntityName').html('<b>View:</b>&nbsp;' + _viewstate.View.Name);
        }
    }
</script>


